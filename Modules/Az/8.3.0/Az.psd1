#
# Module manifest for module 'Az'
#
# Generated by: Microsoft Corporation
#
# Generated on: 2022/9/2
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'Az.psm1'

# Version number of this module.
ModuleVersion = '8.3.0'

# Supported PSEditions
CompatiblePSEditions = 'Core', 'Desktop'

# ID used to uniquely identify this module
GUID = 'd48d710e-85cb-46a1-990f-22dae76f6b5f'

# Author of this module
Author = 'Microsoft Corporation'

# Company or vendor of this module
CompanyName = 'Microsoft Corporation'

# Copyright statement for this module
Copyright = 'Microsoft Corporation. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Microsoft Azure PowerShell - Cmdlets to manage resources in Azure. This module is compatible with PowerShell and Windows PowerShell.
For more information about the Az module, please visit the following: https://docs.microsoft.com/powershell/azure/'

# Minimum version of the PowerShell engine required by this module
PowerShellVersion = '5.1'

# Name of the PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.7.2'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# ClrVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @()

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = @()

# Variables to export from this module
# VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = @()

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = 'Azure','ARM','ResourceManager','Linux','AzureAutomationNotSupported'

        # A URL to the license for this module.
        LicenseUri = 'https://aka.ms/azps-license'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/Azure/azure-powershell'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = '8.3.0 - September 2022
Az.Accounts
* Supported returning all subscriptions with specified name while using ''Get-AzSubscription'' with parameter ''SubscriptionName''. [#19295]
* Fixed null reference exception when cmdlet uses AzureRestOperation [#18104]
* Updated survey message and settings

Az.Aks
* Added support of ''FQDN'' in ''Import-AzAksCredential'' [#17711]
* Added hint when ''Import-AzAksCredential'' meets bad formatted kubernetes configuration file [#16741]
* Added parameter ''-NodeResourceGroup'' for ''New-AzAksCluster''. [#19014]
* Added support for ''Auto Upgrade'' in ''New-AzAksCluster'' and ''Set-AzAksCluster''.
* Added support for ''Http Proxy'' in ''New-AzAksCluster'' and ''Set-AzAksCluster''.
* Added parameter ''DisableLocalAccount'' and ''DiskEncryptionSetID'' in ''New-AzAksCluster'' and ''Set-AzAksCluster''.
* Added logic for installing ''kubelogin'' in ''Install-AzAksKubectl''.

Az.ApiManagement
* Added warning message for upcoming breaking change: changed the type of parameter Sku from Enum to String
* Supported GraphQL Specification Format

Az.AppConfiguration
* Added cmdlets ''Get-AzAppConfigurationDeletedStore'' and ''Clear-AzAppConfigurationDeletedStore''
* Updated ApiVersion to 2022-05-01.

Az.Automation
* Fixed bug: Export-AzAutomationRunbook no longer adds extra ''\'' to file names [#11101]
* Fixed bug: Get-AzAutomationDscCompilationJobOutput returns complete summaries [#12322]
* Fixed bug: Get-AzAutomationDscNode [#10404]
* Fixed bug: Get-AzAutomationJob fails for some jobIds

Az.Batch
* Fixed a bug wherein creating a new JobSchedule does not properly submit Output Files.

Az.Compute
* Added Trusted Launch Generic Breaking Change warning for ''New-AzVM'', ''New-AzDisk'' and ''New-AzVMSS'' cmdlets.
* ''Get-AzVMRunCommand'' now shows all the properties of VMRunCommand in a list format.
* Added new Parameter ''-PublicIpSku'' to the ''NewAzVM'' cmdlet with acceptable values : ''Basic'' and ''Standard''. 
* Added Generic Breaking Change PublicIpSku Warning and Overridden ''-Zone'' logic when ''-PublicIpSku'' is explicitly provided.
* Added Disk Delete Optional parameters ''OsDisk Deletion Option'' and ''Delete Option'' to the ''Set-AzVmssStorageProfile'' (OS Disk) and ''Add-AzVmssDataDisk'' (Data Disk)
* Improved printed output for ''Get-AzComputeResourceSku''
* Updated ''Update-AzVm'' to give constructive error messages when empty variables are passed in parameters. [#15081]
* Added ''Zone'' and ''IntentVMSizeList'' optional parameters to the cmdlet ''New-AzProximityPlacementGroup''.
* Added parameters to Gallery cmdlets for Community Galleries
* For ''New-AzGalleryImageVersion'', ''CVMEncryptionType'' and ''CVMDiskEncryptionSetID'' added as keys for parameter ''-Target''.

Az.DesktopVirtualization
* Corrected parameter description of ''-Force'' in ''Remove-AzWvdUserSession''.

Az.EventGrid
* Updated to use the 2021-12-01 API version.
* Added new features:
    - System topic
    - System topic event subscription
    - System topic event subscription delivery attributes
* Updated cmdlets:
    - ''New-AzEventGridDomain'':
        - Add new optional parameters to support auto creation of topic with first subscription.
        - Add new optional parameters to support auto deletion of topic with last subscription.
        - Add optional parameters to support azure managed identity
    - ''New-AzEventGridTopic''/''Update-AzEventGridTopic'' :
        - Add optional parameters to support azure managed identity
    - ''New-AzEventGridSubscription ''/''Update-AzEventGridSubscription '':
        - Add new optional parameters to support advanced filtering on arrays.
        - Add new optional parameters to support delivery attribute mapping.
        - Add new optional parameters to support storage queue message ttl.

Az.EventHub
* In the upcoming major breaking change release in October 2022, Az.EventHub would be migrating most cmdlets to a new format
for a better powershell experience and as a result would witness breaking changes. Please refer our migration guide to know more https://go.microsoft.com/fwlink/?linkid=2204690.

Az.Functions
* Made PowerShell 7.2 the default when creating a PowerShell function app

Az.KeyVault
* Fixed parameter validation logic of ''-UseDefaultCVMPolicy''
* Added parameter ''ContentType'' in ''Import-AzKeyVaultCertificate'' to support importing pem via certificate string
* Allowed ''DnsName'' in ''New-AzKeyVaultCertificatePolicy'' to accept an empty list [#18954]

Az.MarketplaceOrdering
* Added a warning message for an upcoming breaking change to ''Get-AzMarketplaceTerms''.

Az.Monitor
* Added breaking change warning messages for 
    - ''ActivityLogAlert''
    - ''DiagnosticSetting''
    - ''ScheduledQueryRule''
    - ''Autoscale''

Az.Network
* Added breaking change notification for ''Get-AzFirewall'', ''New-AzFirewall'', ''Set-AzFirewall'' and ''New-AzFirewallHubIpAddress''

Az.OperationalInsights
* Added new cmdlets for Table resource: ''New-AzOperationalInsightsRestoreTable'', ''New-AzOperationalInsightsSearchTable'', ''New-AzOperationalInsightsTable'',''Remove-AzOperationalInsightsTable'',''Update-AzOperationalInsightsTable'', ''Convert-AzOperationalInsightsMigrateTable''
* Added new property ''DefaultDataCollectionRuleResourceId'' to ''Set-AzOperationalInsightsWorkspace'' and to ''New-AzOperationalInsightsWorkspace'' cmdlets

Az.PolicyInsights
* Updated parameter documentation for Get-AzPolicyState 

Az.RecoveryServices
* Added support for Archive smart tiering for AzureVM and MSSQL workloads.

Az.Resources
* Fixed bug ''-Password'' overwrite ''-PasswordProfile'' in ''New-AzADUser'' [#19265]
* Exposed ''EmployeeOrgData'' ''Manager'' for ''Get-AzADUSer'' [#18205]
* Exposed parameter ''-Count'' for ''Get-AzADUser'' [#16874] 

Az.ServiceBus
* In the upcoming major breaking change release in October 2022, Az.ServiceBus would be migrating most cmdlets to a new format
for a better powershell experience and as a result would witness breaking changes. Please refer our migration guide to know more https://go.microsoft.com/fwlink/?linkid=2204584.
* Added -MinimumTlsVersion to New-AzServiceBusNamespace and Set-AzServiceBusNamespace

Az.Storage
* Supported to create or update Storage account with Azure Files Active Directory Domain Service Kerberos Authentication
    -  ''New-AzStorageAccount''
    -  ''Set-AzStorageAccount''
* Supported create/upgrade storage account by enable sftp and enable localuser
    -  ''New-AzStorageAccount''
    -  ''Set-AzStorageAccount''
* Supported manage local user of a storage account
    -  ''Set-AzStorageLocalUser''
    -  ''Get-AzStorageLocalUser''
    -  ''Remove-AzStorageLocalUser''
    -  ''New-AzStorageLocalUserSshPassword''
    -  ''Get-AzStorageLocalUserKey''
    -  ''New-AzStorageLocalUserSshPublicKey''
    -  ''New-AzStorageLocalUserPermissionScope''
* Supported soft delete DataLake Gen2 item
    - ''Get-AzDataLakeGen2DeletedItem''
    - ''Restore-AzDataLakeGen2DeletedItem''

Az.Synapse
* Updated ''New-AzSynapseSparkPool'' and ''Update-AzSynapseSparkPool'' to support for setting spark pool dynamic executor allocation by ''-EnableDynamicExecutorAllocation''

Az.Websites
* Fixed ''Import-AzWebAppKeyVaultCertificate'' to use certificate naming convention same as Az-CLI
'

        # Prerelease string of this module
        # Prerelease = ''

        # Flag to indicate whether the module requires explicit user acceptance for install/update/save
        # RequireLicenseAcceptance = $false

        # External dependent modules of this module
        # ExternalModuleDependencies = @()

    } # End of PSData hashtable

 } # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}


# SIG # Begin signature block
# MIInsgYJKoZIhvcNAQcCoIInozCCJ58CAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCCvhY9l8sgRhvBY
# GU4sjeu6zj+Ts+ycX2sEB79hHfM3FqCCDYUwggYDMIID66ADAgECAhMzAAACzfNk
# v/jUTF1RAAAAAALNMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD
# VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
# bmcgUENBIDIwMTEwHhcNMjIwNTEyMjA0NjAyWhcNMjMwNTExMjA0NjAyWjB0MQsw
# CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
# ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
# AQDrIzsY62MmKrzergm7Ucnu+DuSHdgzRZVCIGi9CalFrhwtiK+3FIDzlOYbs/zz
# HwuLC3hir55wVgHoaC4liQwQ60wVyR17EZPa4BQ28C5ARlxqftdp3H8RrXWbVyvQ
# aUnBQVZM73XDyGV1oUPZGHGWtgdqtBUd60VjnFPICSf8pnFiit6hvSxH5IVWI0iO
# nfqdXYoPWUtVUMmVqW1yBX0NtbQlSHIU6hlPvo9/uqKvkjFUFA2LbC9AWQbJmH+1
# uM0l4nDSKfCqccvdI5l3zjEk9yUSUmh1IQhDFn+5SL2JmnCF0jZEZ4f5HE7ykDP+
# oiA3Q+fhKCseg+0aEHi+DRPZAgMBAAGjggGCMIIBfjAfBgNVHSUEGDAWBgorBgEE
# AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQU0WymH4CP7s1+yQktEwbcLQuR9Zww
# VAYDVR0RBE0wS6RJMEcxLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVsYW5kIE9wZXJh
# dGlvbnMgTGltaXRlZDEWMBQGA1UEBRMNMjMwMDEyKzQ3MDUzMDAfBgNVHSMEGDAW
# gBRIbmTlUAXTgqoXNzcitW2oynUClTBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8v
# d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NybC9NaWNDb2RTaWdQQ0EyMDExXzIw
# MTEtMDctMDguY3JsMGEGCCsGAQUFBwEBBFUwUzBRBggrBgEFBQcwAoZFaHR0cDov
# L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jZXJ0cy9NaWNDb2RTaWdQQ0EyMDEx
# XzIwMTEtMDctMDguY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIB
# AE7LSuuNObCBWYuttxJAgilXJ92GpyV/fTiyXHZ/9LbzXs/MfKnPwRydlmA2ak0r
# GWLDFh89zAWHFI8t9JLwpd/VRoVE3+WyzTIskdbBnHbf1yjo/+0tpHlnroFJdcDS
# MIsH+T7z3ClY+6WnjSTetpg1Y/pLOLXZpZjYeXQiFwo9G5lzUcSd8YVQNPQAGICl
# 2JRSaCNlzAdIFCF5PNKoXbJtEqDcPZ8oDrM9KdO7TqUE5VqeBe6DggY1sZYnQD+/
# LWlz5D0wCriNgGQ/TWWexMwwnEqlIwfkIcNFxo0QND/6Ya9DTAUykk2SKGSPt0kL
# tHxNEn2GJvcNtfohVY/b0tuyF05eXE3cdtYZbeGoU1xQixPZAlTdtLmeFNly82uB
# VbybAZ4Ut18F//UrugVQ9UUdK1uYmc+2SdRQQCccKwXGOuYgZ1ULW2u5PyfWxzo4
# BR++53OB/tZXQpz4OkgBZeqs9YaYLFfKRlQHVtmQghFHzB5v/WFonxDVlvPxy2go
# a0u9Z+ZlIpvooZRvm6OtXxdAjMBcWBAsnBRr/Oj5s356EDdf2l/sLwLFYE61t+ME
# iNYdy0pXL6gN3DxTVf2qjJxXFkFfjjTisndudHsguEMk8mEtnvwo9fOSKT6oRHhM
# 9sZ4HTg/TTMjUljmN3mBYWAWI5ExdC1inuog0xrKmOWVMIIHejCCBWKgAwIBAgIK
# YQ6Q0gAAAAAAAzANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNV
# BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
# c29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlm
# aWNhdGUgQXV0aG9yaXR5IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEw
# OTA5WjB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UE
# BxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYD
# VQQDEx9NaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG
# 9w0BAQEFAAOCAg8AMIICCgKCAgEAq/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+la
# UKq4BjgaBEm6f8MMHt03a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc
# 6Whe0t+bU7IKLMOv2akrrnoJr9eWWcpgGgXpZnboMlImEi/nqwhQz7NEt13YxC4D
# dato88tt8zpcoRb0RrrgOGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+
# lD3v++MrWhAfTVYoonpy4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3oiU+EGvKhL1nk
# kDstrjNYxbc+/jLTswM9sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6
# A4aN91/w0FK/jJSHvMAhdCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxhH2rhKEmd
# X4jiJV3TIUs+UsS1Vz8kA/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL
# 5zmhD+kjSbwYuER8ReTBw3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fufr/zd
# sGbiwZeBe+3W7UvnSSmnEyimp31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3
# T8HhhUSJxAlMxdSlQy90lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS
# 4NaIjAsCAwEAAaOCAe0wggHpMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRI
# bmTlUAXTgqoXNzcitW2oynUClTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTAL
# BgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRyLToCMZBD
# uRQFTuHqp8cx0SOJNDBaBgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jv
# c29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFf
# MDNfMjIuY3JsMF4GCCsGAQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDovL3d3
# dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFf
# MDNfMjIuY3J0MIGfBgNVHSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEF
# BQcCARYzaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3ByaW1h
# cnljcHMuaHRtMEAGCCsGAQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkA
# YwB5AF8AcwB0AGEAdABlAG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn
# 8oalmOBUeRou09h0ZyKbC5YR4WOSmUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7
# v0epo/Np22O/IjWll11lhJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0b
# pdS1HXeUOeLpZMlEPXh6I/MTfaaQdION9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/
# KmtYSWMfCWluWpiW5IP0wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvy
# CInWH8MyGOLwxS3OW560STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/sfQn+N4sOiBp
# mLJZiWhub6e3dMNABQamASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPDXVJi
# hsMdYzaXht/a8/jyFqGaJ+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5hYbXw3MYb
# BL7fQccOKO7eZS/sl/ahXJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbS
# oqKfenoi+kiVH6v7RyOA9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8i+sL
# gOppO6/8MO0ETI7f33VtY5E90Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtX
# cVZOSEXAQsmbdlsKgEhr/Xmfwb1tbWrJUnMTDXpQzTGCGYMwghl/AgEBMIGVMH4x
# CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
# b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01p
# Y3Jvc29mdCBDb2RlIFNpZ25pbmcgUENBIDIwMTECEzMAAALN82S/+NRMXVEAAAAA
# As0wDQYJYIZIAWUDBAIBBQCgga4wGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQw
# HAYKKwYBBAGCNwIBCzEOMAwGCisGAQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIKIr
# emjNoVCQ/xokL1dSrMXkSEksbIAkWPg2TkGwRoKnMEIGCisGAQQBgjcCAQwxNDAy
# oBSAEgBNAGkAYwByAG8AcwBvAGYAdKEagBhodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
# b20wDQYJKoZIhvcNAQEBBQAEggEAmK8lI+SKbd3f9ZPLkOx9OrLCswHUTIwcJcqL
# SxOibbyCqJvwlGy1XBhN4GT5B0JyimFKkFdW3tN0nDKAt9z50MF4RLanijXenmK7
# kE7PXuBkc+7z/j5VoJRme8PoZM8Mo1jCNWpmGkG4TVvBrCEmRQlX0I1pSry1IJhI
# TmVAw8saBX2WIyueaM/FnoGICVv9MehZef+931l+hwXcdca/K2HDySQbreH2f81C
# 8cxjFm/WCaUkqxAheQ8p8cIiMkbNK07xfNH/yJw/kxf9NHJP/J11glKmMHqp1dIV
# VND3QbrvWu2HzamDFf8ATbWhW2uZXKJuD5RTxj4PAu4J87QQK6GCFw0wghcJBgor
# BgEEAYI3AwMBMYIW+TCCFvUGCSqGSIb3DQEHAqCCFuYwghbiAgEDMQ8wDQYJYIZI
# AWUDBAIBBQAwggFVBgsqhkiG9w0BCRABBKCCAUQEggFAMIIBPAIBAQYKKwYBBAGE
# WQoDATAxMA0GCWCGSAFlAwQCAQUABCBw+b6xhaXpUyEiTuAAUeWa1QXh09GZeDFX
# ofU/5bDFvQIGYxFTs/BtGBMyMDIyMDkwMjA0Mzk1Mi4yMzJaMASAAgH0oIHUpIHR
# MIHOMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
# UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSkwJwYDVQQL
# EyBNaWNyb3NvZnQgT3BlcmF0aW9ucyBQdWVydG8gUmljbzEmMCQGA1UECxMdVGhh
# bGVzIFRTUyBFU046Rjc3Ri1FMzU2LTVCQUUxJTAjBgNVBAMTHE1pY3Jvc29mdCBU
# aW1lLVN0YW1wIFNlcnZpY2WgghFgMIIHEDCCBPigAwIBAgITMwAAAaqlMZsLy7II
# DgABAAABqjANBgkqhkiG9w0BAQsFADB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMK
# V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
# IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0Eg
# MjAxMDAeFw0yMjAzMDIxODUxMjZaFw0yMzA1MTExODUxMjZaMIHOMQswCQYDVQQG
# EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
# A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQg
# T3BlcmF0aW9ucyBQdWVydG8gUmljbzEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046
# Rjc3Ri1FMzU2LTVCQUUxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNl
# cnZpY2UwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCgT+xyudW1h3/h
# Q0ofTu2Mq0LZDTL3R8x4ms7znSPTzho8iSGK7NVjjJkgqd6P5r7Lj5xUj+XNHQng
# blKuruid9DPNWWjTj/2m2a08GK2DfjeZ0razhnQrUQbpu+ocu069wGQ1AKy8L4bB
# pV4S5Q1NcIqGsTPgVcAjSOy5k2mCqo5ufIRILGLSiB5OfS8zpyOGnp2zywT/1WGI
# yOmuCiHLp9BGRKwLpLeTwv5ilGjqYVDBmJtD8X6WPQZBubD33MxciHwNdyy0UuLB
# oW1K3DOeBLxNhZVgUGiaO36yluwlYyEyxF+BNpccEBvzLmftcA2IPTjhK0+Yfus3
# nI+u3np8MXlKGjhGyrYlMWiVGJ8kCsQlk5DXVkV0ykpiMcdLW7D+Yq1o6l70+rf8
# 3iSsNOTWPIT0+er1ttKtA2CtjbXjggw9FA+mTQBS1fOxjpJdHgal3E6BVXXicMDk
# xOmgOEamKDa9kFDwSFOiRIlBgbPXOKguZgR02OOlWkf6HWhQy3MUCODj5J+WpfyD
# 7HfP62g5jHyopOusXDYdqjeMsrWDN7og3p1+anhXcd6XYuN6WABTf0tf91UTZPvx
# kVVFGFmAYw2UqsbJYnRPIbMQuyvKi35jaGkNmgLLtd4dX2kzEmSBFcaLM9W/ciHl
# 5rTOjZa41d3rcEuyV2MBoRzHVWBC9QIDAQABo4IBNjCCATIwHQYDVR0OBBYEFD+a
# FLxThy7YX3dFs94RrZ0FRqSeMB8GA1UdIwQYMBaAFJ+nFV0AXmJdg/Tl0mWnG1M1
# GelyMF8GA1UdHwRYMFYwVKBSoFCGTmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9w
# a2lvcHMvY3JsL01pY3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEp
# LmNybDBsBggrBgEFBQcBAQRgMF4wXAYIKwYBBQUHMAKGUGh0dHA6Ly93d3cubWlj
# cm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWljcm9zb2Z0JTIwVGltZS1TdGFtcCUy
# MFBDQSUyMDIwMTAoMSkuY3J0MAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYB
# BQUHAwgwDQYJKoZIhvcNAQELBQADggIBAN8MgE2QRRAaIK3MB7OMyO6l9stI2ygi
# OmYnhgCEfekYjK42b1ht/WDwPxS9r4RkgrTu3mt4gZcIYU8iRD3sS7oE+IweFtK5
# XTiz+WxHNM8MbPTbUxUvFJds2ye48+VsUp4Uh7H2lRVKe0ugdmtW4ypliKP0r3d1
# tVd5nCGM4W6SyFFZT9wm0yRBPnAt4V/iYIJ0mERE8qPpiOx8/yjFhWkVgVGCOINA
# a8IldpWKisnpIzaeq4+2/JejoW4F/yT9G8zcb+oqNGOIjZSM8/z3SIfxNqY96Vz4
# kCT0ZRJDJLEXnBPFZxcqoUeH2/xenOcsGOPphKbISAINmFF7MBaqmyvRb/lPGGHJ
# WD74Sv8EWbPv+WriuBTPkE48sI9Aua5q/DM4qplBoALsGUGMh0QqKZ1XZWjv8cUm
# Qn2mUe8OwdzgRJfI/laKH7NSn6vQJpkAFmTo7eA5zZOTZ8U4T740FbjlP8vh0xK8
# Kg/8CkQpdACd1D0yfDz2Kfo2xF5CpqBYVOCRnq+Xmo9tp19fabozWSqqmq7eMi4z
# VDpKlo1ZOCh6XWERnCTFV5CpEAIpY1J/XB0cDbj8/07u2Jn4EV1jeB7wnE9ptUAA
# 4pzmT7Dub+Y/2xMcNFpha1tgrQxAKZwpZogCnIRa9MUihORE/gMrmy2qXoxDa/b7
# e0Fzaumj9V1nMIIHcTCCBVmgAwIBAgITMwAAABXF52ueAptJmQAAAAAAFTANBgkq
# hkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
# EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
# bjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
# IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgzMjI1WjB8MQswCQYDVQQG
# EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
# A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQg
# VGltZS1TdGFtcCBQQ0EgMjAxMDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
# ggIBAOThpkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjKNVf2AX9sSuDivbk+
# F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYjDLWNE893MsAQGOhgfWpSg0S3po5GawcU
# 88V29YZQ3MFEyHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJprx2rrPY2vjUmZNqY
# O7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6OU8/W7IVWTe/dvI2k45GPsjksUZzp
# cGkNyjYtcI4xyDUoveO0hyTD4MmPfrVUj9z6BVWYbWg7mka97aSueik3rMvrg0Xn
# Rm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdbZ2De+JKRHh09/SDPc31BmkZ1
# zcRfNN0Sidb9pSB9fvzZnkXftnIv231fgLrbqn427DZM9ituqBJR6L8FA6PRc6ZN
# N3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEzOUyOArxCaC4Q6oRRRuLR
# vWoYWmEBc8pnol7XKHYC4jMYctenIPDC+hIK12NvDMk2ZItboKaDIV1fMHSRlJTY
# uVD5C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6bMURHXLvjflSxIUX
# k8A8FdsaN8cIFRg/eKtFtvUeh17aj54WcmnGrnu3tz5q4i6tAgMBAAGjggHdMIIB
# 2TASBgkrBgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQWBBQqp1L+ZMSavoKR
# PEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cVXQBeYl2D9OXSZacbUzUZ6XIwXAYDVR0g
# BFUwUzBRBgwrBgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYzaHR0cDovL3d3dy5t
# aWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1JlcG9zaXRvcnkuaHRtMBMGA1UdJQQM
# MAoGCCsGAQUFBwMIMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQE
# AwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2VsuP6KJcYmjRPZSQ
# W9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
# bS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNybDBa
# BggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0
# LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3J0MA0GCSqG
# SIb3DQEBCwUAA4ICAQCdVX38Kq3hLB9nATEkW+Geckv8qW/qXBS2Pk5HZHixBpOX
# PTEztTnXwnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6U03dmLq2HnjYNi6c
# qYJWAAOwBb6J6Gngugnue99qb74py27YP0h1AdkY3m2CDPVtI1TkeFN1JFe53Z/z
# jj3G82jfZfakVqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis9/kpicO8F7BUhUKz
# /AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4sa3tuPywJeBTpkbKpW99Jo3QMvOyR
# gNI95ko+ZjtPu4b6MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0sHrYUP4KWN1APMdU
# bZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lUZNlz138eW0QBjloZkWsNn6Qo
# 3GcZKCS6OEuabvshVGtqRRFHqfG3rsjoiV5PndLQTHa1V1QJsWkBRH58oWFsc/4K
# u+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLBgqJ7Fx0ViY1w/ue10Cga
# iQuPNtq6TPmb/wrpNPgkNWcr4A245oyZ1uEi6vAnQj0llOZ0dFtq0Z4+7X6gMTN9
# vMvpe784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQtB1VM1izoXBm8qGC
# AtMwggI8AgEBMIH8oYHUpIHRMIHOMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
# aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENv
# cnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0aW9ucyBQdWVydG8g
# UmljbzEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046Rjc3Ri1FMzU2LTVCQUUxJTAj
# BgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2WiIwoBATAHBgUrDgMC
# GgMVAOBtJtCeHgJZY3D/47zr/f6Zv+vGoIGDMIGApH4wfDELMAkGA1UEBhMCVVMx
# EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
# FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
# U3RhbXAgUENBIDIwMTAwDQYJKoZIhvcNAQEFBQACBQDmu9IyMCIYDzIwMjIwOTAy
# MDQ1MjAyWhgPMjAyMjA5MDMwNDUyMDJaMHgwPgYKKwYBBAGEWQoEATEwMC4wCgIF
# AOa70jICAQAwCwIBAAIDBPXnAgH/MAcCAQACAhFZMAoCBQDmvSOyAgEAMDYGCisG
# AQQBhFkKBAIxKDAmMAwGCisGAQQBhFkKAwKgCjAIAgEAAgMHoSChCjAIAgEAAgMB
# hqAwDQYJKoZIhvcNAQEFBQADgYEAgTx6U9C4km6ctxCRZTqbNVUf9qEP/DmIznOP
# /YUvIUoybxP3mQmps3VsdYTkBwBqmD3kht+k1kS7JqEllcwikaX0Q0cR3JGL9bMO
# EQLWrCdCQqC0ZSPR1C0gjBhL6PRPm6nr6HL040I74atHogwhkGJAvepFvVqFbbLR
# cR28ImoxggQNMIIECQIBATCBkzB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
# aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENv
# cnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAx
# MAITMwAAAaqlMZsLy7IIDgABAAABqjANBglghkgBZQMEAgEFAKCCAUowGgYJKoZI
# hvcNAQkDMQ0GCyqGSIb3DQEJEAEEMC8GCSqGSIb3DQEJBDEiBCDKh5cEo49AzD4V
# b5Al8thcSkpxoT8PXCdRuOz47kV3+jCB+gYLKoZIhvcNAQkQAi8xgeowgecwgeQw
# gb0EIFa1AkMcWrwR4HPdNe6AKpGFIj8kJlsBNgQjBMbxsx7AMIGYMIGApH4wfDEL
# MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
# bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWlj
# cm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTACEzMAAAGqpTGbC8uyCA4AAQAAAaow
# IgQgW+lWwT9ExGTUqRUVTKXpy+0OVn0EL6s4Ru/s3lshdK0wDQYJKoZIhvcNAQEL
# BQAEggIAHE/m4SGYZBnAQq+qzmgzud1h9zNLb+tBUtgWIblzQr+DHbqwgZP3Fi3+
# 9f8p+qaRk4U4NI8ynXKMTgpx5C+kopbhwlF/yL+Y4c2J402GBlxBMofWuVOJJrit
# l9PRN9hWyopAtd36fPJQ7gd9z0vmELPR6+MwzksUpSl1wNCxFAB0zwlnUPjv6nSL
# 0LMuukw7QejvokPQOIm7qdRxuo0xrb6EFUo691/o3n5Hbr5faGWAC7Fo2j0YvvjR
# 6C8gE9gqBVcFR7P0QhRRbVBuYW73DKZm+UcXY9afcLKG9+wIP27+Yf2qSyO77oJz
# Ben++RDxzfnkbLqX3kW6PJR1gjzy0oOSDFige1iKxCkWRvDLaO2oXyLImPbWNdWN
# OZqpuV42/GoZywb2nITK6cZ5ZaHSvbLkoRdKAHrMT0rrT7gX92sjsDmS4OjuB7kp
# 0ML2hmQ78m2citu+qtZht7xrp7j1c4L2pCeiYExM2mbYuFXKzwAgWbmTgfE0LoOS
# b9HflJ4zoYFZDLS/NndmEAYtLFR+neZI1pgB/O5rXzvTZaBP8TjJ79xvN2vvo7f3
# 4jUkab8vOrFlwXSX162OLygKE++YJIc153sm4G9EdIWw475d09SxiJfkUteO+V3S
# zUDtvIx3AIrrT0A58dJaTgy8L6tXVDjGw/innUsOricaQKzXRc0=
# SIG # End signature block
